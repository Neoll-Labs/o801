/*
 * O801 API
 *
 * Create and Get User
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"errors"
	"net/http"
)

// ServicesAPIService is a service that implements the logic for the ServicesAPIServicer
// This service should implement the business logic for every endpoint for the ServicesAPI API.
// Include any external packages or services that will be required by this service.
type ServicesAPIService struct {
}

// NewServicesAPIService creates a default api service
func NewServicesAPIService() ServicesAPIServicer {
	return &ServicesAPIService{}
}

// CreateUser -
func (s *ServicesAPIService) CreateUser(ctx context.Context, id string) (ImplResponse, error) {
	// TODO - update CreateUser with the required logic for this service method.
	// Add api_services_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(201, User{}) or use other options such as http.Ok ...
	// return Response(StatusCreated, User{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("CreateUser method not implemented")
}

// GetUser -
func (s *ServicesAPIService) GetUser(ctx context.Context, id float32) (ImplResponse, error) {
	// TODO - update GetUser with the required logic for this service method.
	// Add api_services_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, User{}) or use other options such as http.Ok ...
	// return Response(200, User{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetUser method not implemented")
}
