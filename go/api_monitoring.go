/*
 * O801 API
 *
 * Create and Get User
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"github.com/prometheus/client_golang/prometheus/promhttp"
	"net/http"
	"strings"
)

// MonitoringAPIController binds http requests to an api service and writes the service results to the http response
type MonitoringAPIController struct {
	service      MonitoringAPIServicer
	errorHandler ErrorHandler
}

// MonitoringAPIOption for how the controller is set up.
type MonitoringAPIOption func(*MonitoringAPIController)

// WithMonitoringAPIErrorHandler inject ErrorHandler into controller
func WithMonitoringAPIErrorHandler(h ErrorHandler) MonitoringAPIOption {
	return func(c *MonitoringAPIController) {
		c.errorHandler = h
	}
}

// NewMonitoringAPIController creates a default api controller
func NewMonitoringAPIController(s MonitoringAPIServicer, opts ...MonitoringAPIOption) Router {
	controller := &MonitoringAPIController{
		service:      s,
		errorHandler: DefaultErrorHandler,
	}

	for _, opt := range opts {
		opt(controller)
	}

	return controller
}

// Routes returns all the api routes for the MonitoringAPIController
func (c *MonitoringAPIController) Routes() Routes {
	return Routes{
		"MetricsGet": Route{
			strings.ToUpper("Get"),
			"/metrics",
			c.MetricsGet,
		},
	}
}

// MetricsGet - Returns whether it is currently operational and responsive.
func (c *MonitoringAPIController) MetricsGet(w http.ResponseWriter, r *http.Request) {
	promhttp.Handler().ServeHTTP(w, r)
}
